#!/usr/bin/env python3

import json
import subprocess
import shlex
import shutil
from collections import namedtuple

Window = namedtuple("Window", "workspace id name")


def get_windows(node, workspace=None):
    if node.get("type") == "workspace":
        workspace = node.get("num")

    windows = []

    if node.get("type") == "con" and node.get("name") is not None:
        windows.append(Window(workspace, node.get("id"), node.get("name")))

    for child in node.get("nodes", []):
        windows.extend(get_windows(child, workspace))

    return windows


def main():
    # Use either swaymsg or i3-msg depending on what is available
    msg_command = shutil.which("swaymsg") or shutil.which("i3-msg")

    if msg_command is None:
        print("Neither swaymsg or i3-msg is available.")
        return

    result = subprocess.run([msg_command, "-t", "get_tree"], stdout=subprocess.PIPE)
    tree = json.loads(result.stdout.decode("utf-8"))

    windows = get_windows(tree)
    windows = sorted(windows, key=lambda w: w.workspace)

    # Select a window using bemenu
    window_name = subprocess.run(
        ["bemenu", "-l", "10"],
        input="\n".join(f"{w.workspace} {w.name}" for w in windows),
        stdout=subprocess.PIPE,
        text=True,
    ).stdout.strip()

    if window_name:
        window = next(w for w in windows if f"{w.workspace} {w.name}" == window_name)
        subprocess.run([msg_command, f'[con_id="{window.id}"]', "focus"])


if __name__ == "__main__":
    main()
